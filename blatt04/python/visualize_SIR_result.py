#!/usr/bin/python3

import sys
import os.path as path
import matplotlib.pyplot as plt
import numpy as np 


num_args = len(sys.argv)
if num_args == 1:
    raise ValueError("A path string (either relative or absolute) to a .csv file is required.\n \
                        Alternatively, use the phrase \"EULER\" to visualise both .csv files holding SIR simulations generated by the code in this repository.")
if num_args > 2:
    raise ValueError("Too many arguments, please pass only ")

arg = sys.argv[1]

if arg == "EULER":
    path_explicit = "../data/sir_explicit_euler.csv"
    path_implicit = "../data/sir_implicit_euler.csv"
    explicit, implicit = None, None
    
    try:
        explicit = np.loadtxt(path_explicit, delimiter=',')
        implicit = np.loadtxt(path_implicit, delimiter=',')
    except:
        raise OSError("Cannot find files. Please check if the paths match your working directory, and make sure the files were generated correctly.")

    S_exp, = plt.plot(explicit[:,0], explicit[:,1], 'r', label='S (Explicit)')
    I_exp, = plt.plot(explicit[:,0], explicit[:,2], 'g', label='I (Explicit)')
    R_exp, = plt.plot(explicit[:,0], explicit[:,3], 'b', label='R (Explicit)')

    S_imp, = plt.plot(implicit[:,0], implicit[:,1], 'm', label='S (Implicit)')
    I_imp, = plt.plot(implicit[:,0], implicit[:,2], 'y', label='I (Implicit)')
    R_imp, = plt.plot(implicit[:,0], implicit[:,3], 'c', label='R (Implicit)')
    
    plt.legend(handles=[S_exp,S_imp, I_exp,I_imp, R_exp,R_imp])
    plt.show()

else:
    path_csv = str(arg)
    ending = path_csv[-4:]
    if not ending == ".csv":
        raise ValueError("Input not a .csv file, not supported")
    try:
        print(path_csv)
        data = np.loadtxt(path_csv, delimiter=",")
    except:
        raise OSError("Cannot find files or having trouble opening them. Please check if the paths match your working directory, and make sure the files were generated correctly.")
    
    S, = plt.plot(data[:,0], data[:,1], label='S')
    I, = plt.plot(data[:,0], data[:,2], label='I')
    R, = plt.plot(data[:,0], data[:,3], label='R')
    plt.legend(handles=[S,I,R])
    plt.show()




